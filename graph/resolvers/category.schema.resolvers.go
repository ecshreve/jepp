package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.34

import (
	"context"

	"github.com/ecshreve/jepp/graph/common"
	graph1 "github.com/ecshreve/jepp/graph/generated"
	"github.com/ecshreve/jepp/graph/model"
)

// Clues is the resolver for the clues field.
func (r *categoryResolver) Clues(ctx context.Context, obj *model.Category) ([]*model.Clue, error) {
	context := common.GetContext(ctx)

	var clues []*model.Clue
	if err := context.Database.Where("category_id = ?", obj.ID).Find(&clues).Error; err != nil {
		return nil, err
	}

	return clues, nil
}

// Category returns graph1.CategoryResolver implementation.
func (r *Resolver) Category() graph1.CategoryResolver { return &categoryResolver{r} }

type categoryResolver struct{ *Resolver }
