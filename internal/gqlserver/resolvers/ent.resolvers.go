package gqlserver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.34

import (
	"context"

	"github.com/ecshreve/jepp/internal/ent"
	gqlserver "github.com/ecshreve/jepp/internal/gqlserver/gen"
)

// Node is the resolver for the node field.
func (r *queryResolver) Node(ctx context.Context, id int) (ent.Noder, error) {
	return r.client.Noder(ctx, id)
}

// Nodes is the resolver for the nodes field.
func (r *queryResolver) Nodes(ctx context.Context, ids []int) ([]ent.Noder, error) {
	return r.client.Noders(ctx, ids)
}

// Category returns gqlserver.CategoryResolver implementation.
func (r *Resolver) Category() gqlserver.CategoryResolver { return &categoryResolver{r} }

// Game returns gqlserver.GameResolver implementation.
func (r *Resolver) Game() gqlserver.GameResolver { return &gameResolver{r} }

// Query returns gqlserver.QueryResolver implementation.
func (r *Resolver) Query() gqlserver.QueryResolver { return &queryResolver{r} }

// Season returns gqlserver.SeasonResolver implementation.
func (r *Resolver) Season() gqlserver.SeasonResolver { return &seasonResolver{r} }

type categoryResolver struct{ *Resolver }
type gameResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type seasonResolver struct{ *Resolver }
