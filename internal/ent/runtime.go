// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/ecshreve/jepp/internal/ent/category"
	"github.com/ecshreve/jepp/internal/ent/clue"
	"github.com/ecshreve/jepp/internal/ent/game"
	"github.com/ecshreve/jepp/internal/ent/schema"
	"github.com/ecshreve/jepp/internal/ent/season"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	categoryFields := schema.Category{}.Fields()
	_ = categoryFields
	// categoryDescID is the schema descriptor for id field.
	categoryDescID := categoryFields[0].Descriptor()
	// category.IDValidator is a validator for the "id" field. It is called by the builders before save.
	category.IDValidator = categoryDescID.Validators[0].(func(int) error)
	clueFields := schema.Clue{}.Fields()
	_ = clueFields
	// clueDescID is the schema descriptor for id field.
	clueDescID := clueFields[0].Descriptor()
	// clue.IDValidator is a validator for the "id" field. It is called by the builders before save.
	clue.IDValidator = clueDescID.Validators[0].(func(int) error)
	gameFields := schema.Game{}.Fields()
	_ = gameFields
	// gameDescID is the schema descriptor for id field.
	gameDescID := gameFields[0].Descriptor()
	// game.IDValidator is a validator for the "id" field. It is called by the builders before save.
	game.IDValidator = gameDescID.Validators[0].(func(int) error)
	seasonFields := schema.Season{}.Fields()
	_ = seasonFields
	// seasonDescID is the schema descriptor for id field.
	seasonDescID := seasonFields[0].Descriptor()
	// season.IDValidator is a validator for the "id" field. It is called by the builders before save.
	season.IDValidator = seasonDescID.Validators[0].(func(int) error)
}
