version: "3"
  
dotenv: ['.env', '{{.ENV}}/.env.', '{{.HOME}}/.env']

tasks:
  default:
    desc: List all tasks and descriptions.
    cmds:
      - task --list-all

  build:
    desc: Builds both the scraper and server binaries.
    deps:
      - go:build:scraper
      - go:build:server

  test:
    desc: Runs go tests
    cmds:
      - go test github.com/ecshreve/jepp/...

  go:build:scraper:
    desc: Builds the scraper binary.
    generates:
      - bin/scrape
    sources:
      - cmd/scrape/*.go
      - pkg/scraper/*.go
      - pkg/models/*.go
      - pkg/utils/*.go
    cmds:
      - go build -o bin/scrape github.com/ecshreve/jepp/cmd/scrape

  go:build:server:
    desc: Builds the server binary.
    generates:
      - bin/server
    sources:
      - pkg/**/*.go
      - cmd/server/*.go
    cmds:
      - go build -o bin/server github.com/ecshreve/jepp/cmd/server

  api:docs:
    desc: Generates swagger docs for the API.
    generates:
      - vendor/*
    sources:
      - cmd/server/main.go
      - pkg/server/*.go
      - pkg/server/templates/*
    cmds:
      - swag fmt -d cmd/server,pkg/server,pkg/models,pkg/utils
      - swag init --parseVendor -d cmd/server,pkg/server,pkg/models,pkg/utils
  
  scrape:
    desc: Runs the scraper.
    deps:
      - go:build:scraper
    cmds:
      - bin/scrape

  serve:
    desc: Runs the server.
    deps:
      - go:build:server
    sources:
      - pkg/*
      - docs/*
    cmds:
      - bin/server

  docker:build:
    desc: Builds the docker image.
    deps:
      - go:build:server
    sources:
      - Dockerfile
      - docker-compose.yml
    cmds:
      - docker compose build

  docker:push:
    desc: Pushes the docker image to the digital ocean container registry.
    deps:
      - docker:build
    sources:
      - Dockerfile
      - docker-compose.yml
    cmds:
      - docker push registry.digitalocean.com/shreggie/jepp:custom

  docker:run:
    desc: Runs the docker image.
    deps:
      - docker:build
    sources:
      - Dockerfile
      - docker-compose.yml
    cmds:
      - docker compose up -d

  sql:dump:
    desc: Dumps the database to a file.
    cmds:
      - mysqldump -u ${DB_USER} -p${DB_PASS} -h ${DB_HOST} -P ${DB_PORT} --column-statistics=0 --databases jeppdb > dump.sql
      - gzip dump.sql